<?xml version="1.0" encoding="UTF-8"?>

<databaseChangeLog
        xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
        xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.1.xsd
        http://www.liquibase.org/xml/ns/dbchangelog-ext
        http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd">

    <changeSet id="1" author="badape">

        <createTable tableName="hero">
            <column name="hero_pk" type="bigint" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="title" type="varchar(50)">
                <constraints nullable="false"/>
            </column>
            <column name="credits" type="bigint">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <createTable tableName="account">
            <column name="account_pk" type="bigint" autoIncrement="true">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="balance" type="bigint">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <createTable tableName="roster">
            <column name="account_fk" type="bigint">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="hero_fk" type="bigint">
                <constraints primaryKey="true" nullable="false"/>
            </column>
            <column name="experience" type="bigint" defaultValue="0">
                <constraints nullable="false"/>
            </column>
            <column name="kills" type="bigint" defaultValue="0">
                <constraints nullable="false"/>
            </column>
            <column name="deaths" type="bigint" defaultValue="0">
                <constraints nullable="false"/>
            </column>
        </createTable>

        <addForeignKeyConstraint
                constraintName="roster_account_fk"
                baseTableName="roster"
                baseColumnNames="account_fk"
                referencedTableName="account"
                referencedColumnNames="account_pk"
                onDelete="NO ACTION" onUpdate="NO ACTION"/>

        <addForeignKeyConstraint
                constraintName="roster_hero_fk"
                baseTableName="roster"
                baseColumnNames="hero_fk"
                referencedTableName="hero"
                referencedColumnNames="hero_pk"
                onDelete="NO ACTION" onUpdate="NO ACTION"/>

        <addUniqueConstraint
                catalogName="cat"
                columnNames="title"
                constraintName="unique_title"
                deferrable="true"
                disabled="false"
                initiallyDeferred="true"
                schemaName="public"
                tableName="hero"/>


        <createIndex catalogName="catalog" indexName="idx_hero_pk" tableName="hero" unique="true">
            <column name="hero_pk"/>
        </createIndex>

        <createIndex catalogName="catalog" indexName="idx_account_pk" tableName="account" unique="true">
            <column name="account_pk"/>
        </createIndex>

        <createIndex catalogName="catalog" indexName="idx_roster_pk" tableName="roster" unique="true">
            <column name="account_fk"/>
            <column name="hero_fk"/>
        </createIndex>

        <sql>
            ALTER TABLE hero ADD CONSTRAINT hero_credits_check CHECK (credits >= 0)
        </sql>
        <sql>
            ALTER TABLE account ADD CONSTRAINT hero_credits_check CHECK (balance >= 0)
        </sql>

    </changeSet>

    <changeSet id="2" author="badape">
        <createView catalogName="cat"
                    replaceIfExists="true"
                    viewName="roster_view">
            SELECT account_fk as account_pk, hero_fk, experience, kills, deaths, hero.title
            FROM roster
            JOIN hero ON roster.hero_fk = hero.hero_pk;
        </createView>
    </changeSet>

    <changeSet id="3" author="badape">
        <createProcedure>
            CREATE OR REPLACE FUNCTION roster_view_insert_proc() RETURNS trigger AS
            $$
            DECLARE account_id integer;
            BEGIN

            SELECT hero_pk FROM public.hero WHERE title = NEW.title into NEW.hero_fk;
            UPDATE account SET balance = balance - (SELECT credits FROM hero WHERE hero_pk = NEW.hero_fk) WHERE
            account_pk = NEW.account_pk;
            INSERT INTO roster(account_fk, hero_fk) VALUES (NEW.account_pk, NEW.hero_fk);

            RETURN NEW;
            EXCEPTION WHEN unique_violation THEN
            RAISE EXCEPTION 'Duplicate insufficient funds or already in roster';
            END;
            $$
            LANGUAGE 'plpgsql';
        </createProcedure>
        <sql>
            CREATE TRIGGER roster_insert_trg
            INSTEAD OF INSERT ON roster_view FOR EACH ROW EXECUTE PROCEDURE
            roster_view_insert_proc();
        </sql>
    </changeSet>

</databaseChangeLog>